{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastli","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","console","log","jQuery","prompt","indexOf","push","toUpperCase","logoType","onbeforeunload","string","stringify","setItem","document","key","i","length","is","toLowerCase"],"mappings":"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","file":"main.6c6ed924.map","sourceRoot":"..\\src","sourcesContent":["const $siteList = $('.siteList')  //先找到siteList\r\nconst $lastli = $siteList.find('li.last')  //找到last\r\nconst x = localStorage.getItem('x')\r\nconst xObject = JSON.parse(x)\r\n\r\n\r\n\r\nconst hashMap = xObject || [//parcel 默认在代码加上作用域 不能变成全局变量  要全局就window\r\n    { logo: 'A',  url: 'https://www.acfun.cn' },\r\n    { logo: 'B', url: 'https://www.bilibili.com' }\r\n\r\n];//有了哈希map之后呢就会发现 没有必要 预先把AC B写在那里 可以用哈希map生成这个结构\r\n//removeX 会接收一个https：///www开头的东西 返回一个没有这个开头的东西\r\nconst simplifyUrl = (url) => {\r\n    return url.replace('https://', '').replace('http://', '').replace('www.', '')\r\n    .replace(/\\/.*/,  '')  //删除/开头的内容直到结尾\r\n}\r\n\r\nconst render = () => {//render 等于一个函数\r\n    $siteList.find('li:not(.last)').remove()\r\n    hashMap.forEach((node,index) => {\r\n        const $li = $(`<li>\r\n                    <div class=\"site\">\r\n                    <div class=\"logo\">${node.logo}</div>\r\n                    <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n                    <div class=\"close\"><svg class=\"icon\" >\r\n                    <use xlink:href=\"#icon-close\"></use>\r\n                    </svg></div>\r\n                    </div>\r\n        </li>`).insertBefore($lastli);\r\n        //当li自己被点击的时候,打开URL\r\n        $li.on('click', () => {\r\n            window.open(node.url)\r\n        })\r\n\r\n        $li.on('click', '.close', (e) => {\r\n            e.stopPropagation()\r\n            hashMap.splice(index, 1)\r\n            render()\r\n        })\r\n        \r\n    });\r\n}\r\n\r\nrender()//声明了你得先调用一下\r\n//  <li>\r\n//                 <a href=\"https://www.acfun.cn/\">\r\n//                      <div class=\"site\">\r\n//                     <div class=\"logo\">A</div>\r\n//                     <div class=\"link\">acfun.cn</div>\r\n//                 </div>\r\n//                 </a>\r\n//             </li>\r\n//             <li>\r\n//                 <a href=\"https://www.bilibili.com/\">\r\n//                     <div class=\"site\">\r\n//                     <div class=\"logo\">\r\n//                         <img src=\"./imgs/bilibil.png\" alt=\"\">\r\n//                     </div>\r\n//                     <div class=\"link\">bilibili.com</div>\r\n//                 </div>\r\n//                 </a>\r\n                \r\n//             </li>\r\n\r\nconsole.log(jQuery)\r\n$('.addButton')\r\n    .on('click', () => {\r\n        let url = window.prompt('请输入你要添加的网址')\r\n        if (url.indexOf('http')!=0) {  /*如果第一个字符不是http */\r\n                       // alert('请输入http开头的网址')\r\n            url = 'https://' + url\r\n        }\r\n        console.log(url)\r\n        hashMap.push({\r\n            logo: simplifyUrl(url)[0].toUpperCase(),\r\n            logoType: 'text',\r\n            url: url\r\n        });\r\n       \r\n\r\n\r\nrender()\r\n        //多行字符串 有上面那个这个就不要了\r\n        // const $li = $(`<li>\r\n        // <a href=\"${url}/\">\r\n        //              <div class=\"site\">\r\n        //             <div class=\"logo\">${url [0]}</div>\r\n        //             <div class=\"link\">${url}</div>\r\n        //         </div>\r\n        //         </a>\r\n        // </li>`).insertBefore($lastli)    //插入目标前面\r\n    })\r\n\r\n   window.onbeforeunload = ()=> {\r\n        // console.log('页面要关闭了')\r\n       const string = JSON.stringify(hashMap)\r\n        // console.log(typeof hashMap)\r\n        // console.log(hashMap)\r\n        // console.log(typeof string)\r\n        // console.log(string)\r\n       localStorage.setItem('x',string)//在本地存储里面设置一个X它的值就是string\r\n};\r\n\r\n       $(document).on('keypress', (e) => {\r\n    //const key = e.key//变量名和 后面的属性名一样可以简写成以下\r\n    const { key } = e\r\n    //遍历hashMap 找到和logo一样的 打开网页\r\n \r\n    for (let i = 0; i < hashMap.length; i++){\r\n        if ($(\"input\").is(\":focus\") == true) {\r\n            \r\n        }\r\n            else if(hashMap[i].logo.toLowerCase() === key) {\r\n            window.open(hashMap[i].url)\r\n        }\r\n    }\r\n}) \r\n       \r\n\r\n\r\n\r\n//  window.onInputFocus = (z) => {\r\n//      z.style.background = \"red\";\r\n    \r\n// }\r\n\r\n// window.onInputBlur = (z) => {\r\n//     z.style.background=\"yellow\";\r\n    \r\n// }\r\n\r\n\r\n\r\n"]}